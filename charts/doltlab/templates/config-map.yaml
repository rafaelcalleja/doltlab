{{ $_ := set . "Values" (fromYaml (include "common.tplvalues.render" ( dict "value" .Values "context" $ ))) }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "doltlab.fullname" . }}-cm
  labels:
{{ include "doltlab.labels" . | indent 4 }}
data:
  api_iter_token.keys: |
    {{ .Values.api.token }}
  remoteApi_iter_token.keys: |
    {{ .Values.remoteApi.token }}
  fileServiceApi_iter_token.keys: |
    {{ .Values.fileServiceApi.token }}
  envoy.yaml: |
    admin:
      access_log_path: /tmp/admin_access.log
      address:
        socket_address: { address: 0.0.0.0, port_value: 9901 }
    static_resources:
      listeners:
        - name: internal_metrics_listener
          address:
            socket_address: { address: 0.0.0.0, port_value: 7770 }
          traffic_direction: inbound
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    codec_type: auto
                    stat_prefix: http
                    route_config:
                      virtual_hosts:
                        - name: http
                          domains: ["*"]
                          routes:
                            - match: { path: "/stats/prometheus" }
                              route: { cluster: admin }
                            - match: { path: "/doltlabremoteapi" }
                              route:
                                cluster: doltlabremoteapi_metrics
                                prefix_rewrite: "/metrics"
                            - match: { path: "/doltlabapi" }
                              route:
                                cluster: doltlabapi_metrics
                                prefix_rewrite: "/metrics"
                    http_filters:
                      - name: envoy.filters.http.router
                    access_log:
                      - name: envoy.access_loggers.stream
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                          log_format:
                            text_format_source:
                              inline_string: >
                                [%START_TIME%]
                                "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%"
                                %RESPONSE_CODE% %GRPC_STATUS% %RESPONSE_FLAGS%
                                %BYTES_RECEIVED% %BYTES_SENT%
                                %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%
                                "%DOWNSTREAM_REMOTE_ADDRESS_WITHOUT_PORT%"
                                "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%"
                                "%UPSTREAM_HOST%"
                                "%UPSTREAM_TRANSPORT_FAILURE_REASON%"
        - name: https_listener
          address:
            socket_address: { address: 0.0.0.0, port_value: 9443 }
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    codec_type: auto
                    stat_prefix: doltlabapi
                    route_config:
                      name: local_route
                      virtual_hosts:
                        - name: local_service
                          domains: ["*"]
                          routes:
                            - match:
                                prefix: "/"
                              route:
                                cluster: doltlabapi_service
                                timeout: 600s
                          cors:
                            allow_origin_string_match:
                              - exact: "http(s)://{{ .Values.webUi.env.HOST_IP }}"
                            allow_methods: GET, PUT, DELETE, POST, OPTIONS
                            allow_headers: authorization,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web
                            max_age: "1728000"
                            expose_headers: grpc-status,grpc-message
                    http_filters:
                      - name: envoy.filters.http.grpc_web
                      - name: envoy.filters.http.cors
                      - name: envoy.filters.http.router
                    access_log:
                      - name: envoy.access_loggers.stream
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                          log_format:
                            text_format_source:
                              inline_string: >
                                [%START_TIME%]
                                "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%"
                                %RESPONSE_CODE% %GRPC_STATUS% %RESPONSE_FLAGS%
                                %BYTES_RECEIVED% %BYTES_SENT%
                                %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%
                                "%DOWNSTREAM_REMOTE_ADDRESS_WITHOUT_PORT%"
                                "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%"
                                "%UPSTREAM_HOST%"
                                "%UPSTREAM_TRANSPORT_FAILURE_REASON%"
        - name: doltlab_graphql_listener
          address:
            socket_address: { address: 0.0.0.0, port_value: 80 }
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    codec_type: auto
                    stat_prefix: dolthub_graphql
                    route_config:
                      name: local_route
                      virtual_hosts:
                        - name: local_service
                          domains: [ "*" ]
                          routes:
                            - match:
                                prefix: "/csv/"
                              route:
                                cluster: dolthubapi_csv_service
                                timeout: 0s
                                idle_timeout: 15s
                            - match:
                                prefix: "/graphql"
                              route:
                                cluster: graphql_service
                                timeout: 600s
                            - match:
                                prefix: "/"
                              route:
                                cluster: doltlab_service
                    http_filters:
                      - name: envoy.filters.http.router
                    access_log:
                      - name: envoy.access_loggers.stream
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                          log_format:
                            text_format_source:
                              inline_string: >
                                [%START_TIME%]
                                "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%"
                                %RESPONSE_CODE% %GRPC_STATUS% %RESPONSE_FLAGS%
                                %BYTES_RECEIVED% %BYTES_SENT%
                                %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%
                                "%DOWNSTREAM_REMOTE_ADDRESS_WITHOUT_PORT%"
                                "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%"
                                "%UPSTREAM_HOST%"
                                "%UPSTREAM_TRANSPORT_FAILURE_REASON%"
        - name: file_service_api_listener
          address:
            socket_address: { address: 0.0.0.0, port_value: 4321 }
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    codec_type: auto
                    stat_prefix: file_service_api
                    route_config:
                      name: local_route
                      virtual_hosts:
                        - name: local_service
                          domains: [ "*" ]
                          routes:
                            - match:
                                prefix: "/users"
                              route:
                                cluster: fileapi_service
                                timeout: 600s
                          cors:
                            allow_origin_string_match:
                              - exact: "http(s)://{{ .Values.webUi.env.HOST_IP }}"
                            allow_methods: GET, PUT, DELETE, POST, OPTIONS
                            expose_headers: etag
                            allow_headers: authorization,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,dolthubapi-uploader-id,content-md5
                            allow_credentials: true
                            max_age: "1728000"
                    http_filters:
                      - name: envoy.filters.http.grpc_web
                      - name: envoy.filters.http.cors
                      - name: envoy.filters.http.router
                    access_log:
                      - name: envoy.access_loggers.stream
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                          log_format:
                            text_format_source:
                              inline_string: >
                                [%START_TIME%]
                                "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%"
                                %RESPONSE_CODE% %GRPC_STATUS% %RESPONSE_FLAGS%
                                %BYTES_RECEIVED% %BYTES_SENT%
                                %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%
                                "%DOWNSTREAM_REMOTE_ADDRESS_WITHOUT_PORT%"
                                "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%"
                                "%UPSTREAM_HOST%"
                                "%UPSTREAM_TRANSPORT_FAILURE_REASON%"
        - name: outbound_graphql_listener
          address:
            socket_address: { address: 0.0.0.0, port_value: 10080 }
          traffic_direction: outbound
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    codec_type: auto
                    stat_prefix: outbound_graphql
                    route_config:
                      virtual_hosts:
                        - name: graphql
                          domains: ["*"]
                          routes:
                            - match:
                                prefix: "/"
                              route:
                                cluster: graphql_service
                                timeout: 600s
                    http_filters:
                      - name: envoy.filters.http.router
                    access_log:
                      - name: envoy.access_loggers.stream
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                          log_format:
                            text_format_source:
                              inline_string: >
                                [%START_TIME%]
                                "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%"
                                %RESPONSE_CODE% %GRPC_STATUS% %RESPONSE_FLAGS%
                                %BYTES_RECEIVED% %BYTES_SENT%
                                %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%
                                "%DOWNSTREAM_REMOTE_ADDRESS_WITHOUT_PORT%"
                                "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%"
                                "%UPSTREAM_HOST%"
                                "%UPSTREAM_TRANSPORT_FAILURE_REASON%"
        - name: outbound_grpc_listener
          address:
            socket_address: { address: 0.0.0.0, port_value: 9480 }
          filter_chains:
            - filters:
                - name: envoy.filters.netowrk.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    codec_type: auto
                    stat_prefix: outbound_grpc
                    route_config:
                      name: local_route
                      virtual_hosts:
                        - name: local_service
                          domains: ["*"]
                          routes:
                            - match:
                                prefix: "/"
                                headers:
                                  - name: ":authority"
                                    exact_match: "doltremoteapi"
                                grpc: {}
                              route:
                                cluster: doltlabremoteapi_service
                                timeout: 600s
                                max_stream_duration:
                                  grpc_timeout_header_max: 600s
                              request_headers_to_add:
                                - header:
                                    key: "x-doltremoteapi-is-authorized"
                                    value: "true"
                            - match:
                                prefix: "/"
                                headers:
                                  - name: ":authority"
                                    exact_match: "doltremoteapi-internal"
                                grpc: {}
                              route:
                                cluster: doltlabremoteapi_service
                                max_stream_duration:
                                  grpc_timeout_header_max: 600s
                                timeout: 600s
                            - match:
                                prefix: "/"
                                headers:
                                  - name: ":authority"
                                    exact_match: "dolthubapi"
                                grpc: {}
                              route:
                                timeout: 600s
                                cluster: doltlabapi_service
                            - match:
                                prefix: "/"
                                headers:
                                  - name: ":authority"
                                    exact_match: "doltremoteauth"
                                grpc: {}
                              route:
                                timeout: 600s
                                cluster: doltlabapi_service
                    http_filters:
                      - name: envoy.filters.http.router
                    access_log:
                      - name: envoy.access_loggers.stream
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                          log_format:
                            text_format_source:
                              inline_string: >
                                [%START_TIME%]
                                "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%"
                                %RESPONSE_CODE% %GRPC_STATUS% %RESPONSE_FLAGS%
                                %BYTES_RECEIVED% %BYTES_SENT%
                                %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%
                                "%DOWNSTREAM_REMOTE_ADDRESS_WITHOUT_PORT%"
                                "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%"
                                "%UPSTREAM_HOST%"
                                "%UPSTREAM_TRANSPORT_FAILURE_REASON%"
      clusters:
        - name: doltlabapi_service
          connect_timeout: 0.25s
          type: strict_dns
          http2_protocol_options: {}
          lb_policy: round_robin
          load_assignment:
            cluster_name: doltlabapi_service
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: "{{ include "doltlab.fullname" . }}-api.{{ .Release.Namespace }}.svc.cluster.local"
                          port_value: 60051
        - name: dolthubapi_csv_service
          connect_timeout: 0.25s
          type: strict_dns
          lb_policy: round_robin
          load_assignment:
            cluster_name: dolthubapi_csv_service
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: "{{ include "doltlab.fullname" . }}-api.{{ .Release.Namespace }}.svc.cluster.local"
                          port_value: 60052
        - name: doltlabapi_metrics
          connect_timeout: 0.25s
          type: strict_dns
          http_protocol_options: { accept_http_10: true }
          lb_policy: round_robin
          load_assignment:
            cluster_name: doltlabapi_metrics
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: "{{ include "doltlab.fullname" . }}-api.{{ .Release.Namespace }}.svc.cluster.local"
                          port_value: 50091
        - name: doltlabremoteapi_service
          connect_timeout: 0.25s
          type: strict_dns
          http2_protocol_options: {}
          lb_policy: round_robin
          load_assignment:
            cluster_name: doltlabremoteapi_service
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: "{{ include "doltlab.fullname" . }}-remote-api.{{ .Release.Namespace }}.svc.cluster.local"
                          port_value: 50051
        - name: doltlabremoteapi_metrics
          connect_timeout: 0.25s
          type: strict_dns
          http_protocol_options: { accept_http_10: true }
          lb_policy: round_robin
          load_assignment:
            cluster_name: doltlabremoteapi_metrics
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: "{{ include "doltlab.fullname" . }}-remote-api.{{ .Release.Namespace }}.svc.cluster.local"
                          port_value: 50091
        - name: graphql_service
          connect_timeout: 0.25s
          type: strict_dns
          lb_policy: round_robin
          load_assignment:
            cluster_name: graphql_service
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: "{{ include "doltlab.fullname" . }}-graphql.{{ .Release.Namespace }}.svc.cluster.local"
                          port_value: 9000
        - name: doltlab_service
          connect_timeout: 0.25s
          type: strict_dns
          lb_policy: round_robin
          load_assignment:
            cluster_name: doltlab_service
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: "{{ include "doltlab.fullname" . }}-webui.{{ .Release.Namespace }}.svc.cluster.local"
                          port_value: 3000
        - name: fileapi_service
          connect_timeout: 0.25s
          type: strict_dns
          lb_policy: round_robin
          load_assignment:
            cluster_name: fileapi_service
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: "{{ include "doltlab.fullname" . }}-file-service.{{ .Release.Namespace }}.svc.cluster.local"
                          port_value: 60055
        - name: admin
          connect_timeout: 0.25s
          type: strict_dns
          lb_policy: round_robin
          load_assignment:
            cluster_name: admin
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: "127.0.0.1"
                          port_value: 9901
    
    
        
