{{ $_ := set . "Values" (fromYaml (include "common.tplvalues.render" ( dict "value" .Values "context" $ ))) }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "doltlab.fullname" . }}-database
  labels:
    app: database
{{ include "doltlab.labels" . | indent 4 }}
spec:
  serviceName: postgres-service
  replicas: {{ .Values.database.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "doltlab.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app: database
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "doltlab.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app: database
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.images.database }}:{{ .Values.images.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: postgres
              containerPort: {{ .Values.database.internalPort }}
              protocol: TCP
          readinessProbe:
            exec:
              command: [ "psql", "-w", "-U", "{{ .Values.database.env.POSTGRES_USER }}", "-d", "dolthubapi", "-c", "SELECT 1" ]
            initialDelaySeconds: 15
            timeoutSeconds: 2
          livenessProbe:
            exec:
              command: [ "psql", "-w", "-U", "{{ .Values.database.env.POSTGRES_USER }}", "-d", "dolthubapi", "-c", "SELECT 1" ]
            initialDelaySeconds: 45
            timeoutSeconds: 2
          volumeMounts:
            {{- if not .Values.database.persistence.enabled }}
            - name: postgres-disk
              emptyDir: {}
            {{ else }}
            - name: postgres-disk
              mountPath: /var/lib/postgresql/data
              subPath: postgres
            {{- end }}
          env:
          {{- range $pkey, $pval := .Values.database.env }}
          - name: {{ $pkey }}
            value: {{ $pval }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- if .Values.database.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: postgres-disk
        {{- with .Values.database.persistence.annotations }}
        annotations:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      spec:
        accessModes: [ {{ .Values.database.persistence.accessMode }} ]
        resources:
          requests:
            storage: {{ .Values.database.persistence.size }}
        {{- if .Values.database.persistence.selector }}
        {{- with .Values.database.persistence.selector.matchLabels }}
        selector:
          matchLabels:
            {{- toYaml . | nindent 12 }}
        {{- end }}
        {{- end }}
      {{- if .Values.database.persistence.storageClass }}
      {{- if (eq "-" .Values.database.persistence.storageClass) }}
        storageClassName: ""
      {{- else }}
        storageClassName: "{{ .Values.database.persistence.storageClass }}"
      {{- end }}
      {{- end }}
  {{- end }}
